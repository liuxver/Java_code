package 算法第二次上机;
/**
*
*author:liuxv
*student_number:15130120185
*email:liuxver444@gmail.com
*email1:1369058574@qq.com
*/
public class matrixchain {
	public static int[] a={3,5,2,1,10};
	public static int[] b={2,7,3,6,10};
	public static int[] c={10,3,15,12,7,2};
	public static int[] d={7,2,4,15,20,5};
	
	
	
	static int matrixChainOrder(int[] p){
		int n=p.length-1;
		int [][] m=new int [n+1][n+1];
		int [][] s=new int [n+1][n+1];
		
		for(int i=0;i<=n;i++){
			m[i][i]=0;
		}
		for(int i=0;i<=n;i++){
			s[i][i]=0;
		}
		
		for(int q=2;q<=n;q++){
			for(int i=1;i<=n-q+1;i++){
				int j=i+q-1;
				m[i][j]=888888;
				for(int k=i;k<=j-1;k++){
					int q=m[i][k]+m[k+1][j]+p[i-1]*p[k]*p[j];
					if(q<m[i][j]){
						m[i][j]=q;
						s[i][j]=k;
						
					}
				}
			}
		}
		
		System.out.println("the best answer:");
		printResult(s,1,n);
		System.out.println("\nthe total numbers: "+m[1][n]);
	}
	
	static void printResult(int[][] s,int i,int j){
		if(i==j){
			System.out.print('A');
			System.out.print(i);
		}
		else{
			System.out.print('(');
			printResult(s,i,s[i][j]);
			printResult(s,s[i][j]+1,j);
			System.out.print(')');
		}
	}
	
	public static void main(String[] args){
		System.out.println(x);
	}
	
	
	
}
