package 算法第二次上机;
/**
*
*author:liuxv
*student_number:15130120185
*email:liuxver444@gmail.com
*email1:1369058574@qq.com
*/
public class SP {
	static int[] getShortPath(int[][] data){
		int [] result=new int[15];
		for(int i=0;i<15;i++){
			result[i]=8888888;
		}
		
		result[0]=0;
		for(int i=0;i<15;i++){
			int minNum=888888;
			int minIndex=888888;
			for(int j=0;j<data.length;j++){
				if(data[j][0]==0){
					result[data[j][1]]=data[j][2];
					if(data[j][2]<minNum){
						minNum=data[j][2];
						minIndex=j;
					}
				}
				
				
			}
			
			
			
		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		return result;
	}
	
	public static void main(String[] args){
		int [][] data={{0,1,5},{0,2,3},{1,3,1},{1,4,3},{1,5,6},{2,4,8},
				{2,5,7},{2,6,6},{3,7,6},{3,8,8},{4,7,3},{4,8,5},{5,8,3},
				{5,9,3},{6,8,8},{6,9,4},{7,10,2},{7,11,2},{8,11,1},{8,12,2},
				{9,11,3},{9,12,3},{10,13,3},{10,14,5},{11,13,5},{11,14,2},{12,13,6},
				{12,14,6},{13,15,4},{14,15,3}
		};
		
		int [] result=getShortPath(data);
		
	}
}
